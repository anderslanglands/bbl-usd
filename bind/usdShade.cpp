#if defined(__clang__)

#include "babble"
#include "babble-std"

#include <pxr/usd/usdShade/connectableAPI.h>
#include <pxr/usd/usdShade/connectableAPIBehavior.h>
#include <pxr/usd/usdShade/coordSysAPI.h>
#include <pxr/usd/usdShade/input.h>
#include <pxr/usd/usdShade/material.h>
#include <pxr/usd/usdShade/materialBindingAPI.h>
#include <pxr/usd/usdShade/nodeDefAPI.h>
#include <pxr/usd/usdShade/nodeGraph.h>
#include <pxr/usd/usdShade/output.h>
#include <pxr/usd/usdShade/shader.h>
#include <pxr/usd/usdShade/shaderDefParser.h>
#include <pxr/usd/usdShade/shaderDefUtils.h>
#include <pxr/usd/usdShade/tokens.h>
#include <pxr/usd/usdShade/types.h>
#include <pxr/usd/usdShade/udimUtils.h>
#include <pxr/usd/usdShade/utils.h>

BBL_MODULE(usdShade) {
    // clang-format off

    bbl::Class<PXR_NS::UsdShadeAttributeVector>("AttributeVector")
    ;

    bbl::Class<PXR_NS::UsdShadeConnectableAPI>("ConnectableAPI")
        .ctor(bbl::Class<PXR_NS::UsdShadeConnectableAPI>::Ctor<const PXR_NS::UsdPrim &>("prim"), "from_prim")
        .ctor(bbl::Class<PXR_NS::UsdShadeConnectableAPI>::Ctor<const PXR_NS::UsdSchemaBase &>("schemaObj"), "from_schema")
        .m(&PXR_NS::UsdShadeConnectableAPI::GetSchemaAttributeNames)
        .m(&PXR_NS::UsdShadeConnectableAPI::Get)
        .m(&PXR_NS::UsdShadeConnectableAPI::IsContainer)
        .m(&PXR_NS::UsdShadeConnectableAPI::RequiresEncapsulation)
        .m((bool (*)(const PXR_NS::UsdShadeInput &, const PXR_NS::UsdAttribute &))
            &PXR_NS::UsdShadeConnectableAPI::CanConnect, "CanConnect_00")
        .m((bool (*)(const PXR_NS::UsdShadeInput &, const PXR_NS::UsdShadeInput &))
            &PXR_NS::UsdShadeConnectableAPI::CanConnect, "CanConnect_01")
        .m((bool (*)(const PXR_NS::UsdShadeInput &, const PXR_NS::UsdShadeOutput &))
            &PXR_NS::UsdShadeConnectableAPI::CanConnect, "CanConnect_02")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &, const PXR_NS::UsdAttribute &))
            &PXR_NS::UsdShadeConnectableAPI::CanConnect, "CanConnect_03")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &, const PXR_NS::UsdShadeInput &))
            &PXR_NS::UsdShadeConnectableAPI::CanConnect, "CanConnect_04")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &, const PXR_NS::UsdShadeOutput &))
            &PXR_NS::UsdShadeConnectableAPI::CanConnect, "CanConnect_05")
        .m((bool (*)(const PXR_NS::UsdAttribute &, const PXR_NS::UsdShadeConnectionSourceInfo &, const PXR_NS::UsdShadeConnectableAPI::ConnectionModification))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_00")
        .m((bool (*)(const PXR_NS::UsdShadeInput &, const PXR_NS::UsdShadeConnectionSourceInfo &, const PXR_NS::UsdShadeConnectableAPI::ConnectionModification))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_01")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &, const PXR_NS::UsdShadeConnectionSourceInfo &, const PXR_NS::UsdShadeConnectableAPI::ConnectionModification))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_02")
        .m((bool (*)(const PXR_NS::UsdAttribute &, const PXR_NS::UsdShadeConnectableAPI &, const PXR_NS::TfToken &, const PXR_NS::UsdShadeAttributeType, PXR_NS::SdfValueTypeName))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_03")
        .m((bool (*)(const PXR_NS::UsdShadeInput &, const PXR_NS::UsdShadeConnectableAPI &, const PXR_NS::TfToken &, const PXR_NS::UsdShadeAttributeType, PXR_NS::SdfValueTypeName))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_04")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &, const PXR_NS::UsdShadeConnectableAPI &, const PXR_NS::TfToken &, const PXR_NS::UsdShadeAttributeType, PXR_NS::SdfValueTypeName))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_05")
        .m((bool (*)(const PXR_NS::UsdAttribute &, const PXR_NS::SdfPath &))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_06")
        .m((bool (*)(const PXR_NS::UsdShadeInput &, const PXR_NS::SdfPath &))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_07")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &, const PXR_NS::SdfPath &))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_08")
        .m((bool (*)(const PXR_NS::UsdAttribute &, const PXR_NS::UsdShadeInput &))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_09")
        .m((bool (*)(const PXR_NS::UsdShadeInput &, const PXR_NS::UsdShadeInput &))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_10")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &, const PXR_NS::UsdShadeInput &))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_11")
        .m((bool (*)(const PXR_NS::UsdAttribute &, const PXR_NS::UsdShadeOutput &))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_12")
        .m((bool (*)(const PXR_NS::UsdShadeInput &, const PXR_NS::UsdShadeOutput &))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_13")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &, const PXR_NS::UsdShadeOutput &))
            &PXR_NS::UsdShadeConnectableAPI::ConnectToSource, "ConnectToSource_14")
        .m(&PXR_NS::UsdShadeConnectableAPI::SetConnectedSources)
        .m((bool (*)(const PXR_NS::UsdAttribute &, PXR_NS::UsdShadeConnectableAPI *, PXR_NS::TfToken *, PXR_NS::UsdShadeAttributeType *))
            &PXR_NS::UsdShadeConnectableAPI::GetConnectedSource, "GetConnectedSource_00")
        .m((bool (*)(const PXR_NS::UsdShadeInput &, PXR_NS::UsdShadeConnectableAPI *, PXR_NS::TfToken *, PXR_NS::UsdShadeAttributeType *))
            &PXR_NS::UsdShadeConnectableAPI::GetConnectedSource, "GetConnectedSource_01")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &, PXR_NS::UsdShadeConnectableAPI *, PXR_NS::TfToken *, PXR_NS::UsdShadeAttributeType *))
            &PXR_NS::UsdShadeConnectableAPI::GetConnectedSource, "GetConnectedSource_02")
        .m((PXR_NS::UsdShadeSourceInfoVector (*)(const PXR_NS::UsdAttribute &, PXR_NS::SdfPathVector *))
            &PXR_NS::UsdShadeConnectableAPI::GetConnectedSources, "GetConnectedSources_00")
        .m((PXR_NS::UsdShadeSourceInfoVector (*)(const PXR_NS::UsdShadeInput &, PXR_NS::SdfPathVector *))
            &PXR_NS::UsdShadeConnectableAPI::GetConnectedSources, "GetConnectedSources_01")
        .m((PXR_NS::UsdShadeSourceInfoVector (*)(const PXR_NS::UsdShadeOutput &, PXR_NS::SdfPathVector *))
            &PXR_NS::UsdShadeConnectableAPI::GetConnectedSources, "GetConnectedSources_02")
        .m((bool (*)(const PXR_NS::UsdAttribute &, PXR_NS::SdfPathVector *))
            &PXR_NS::UsdShadeConnectableAPI::GetRawConnectedSourcePaths, "GetRawConnectedSourcePaths_00")
        .m((bool (*)(const PXR_NS::UsdShadeInput &, PXR_NS::SdfPathVector *))
            &PXR_NS::UsdShadeConnectableAPI::GetRawConnectedSourcePaths, "GetRawConnectedSourcePaths_01")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &, PXR_NS::SdfPathVector *))
            &PXR_NS::UsdShadeConnectableAPI::GetRawConnectedSourcePaths, "GetRawConnectedSourcePaths_02")
        .m((bool (*)(const PXR_NS::UsdAttribute &))
            &PXR_NS::UsdShadeConnectableAPI::HasConnectedSource, "HasConnectedSource_00")
        .m((bool (*)(const PXR_NS::UsdShadeInput &))
            &PXR_NS::UsdShadeConnectableAPI::HasConnectedSource, "HasConnectedSource_01")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &))
            &PXR_NS::UsdShadeConnectableAPI::HasConnectedSource, "HasConnectedSource_02")
        .m((bool (*)(const PXR_NS::UsdAttribute &))
            &PXR_NS::UsdShadeConnectableAPI::IsSourceConnectionFromBaseMaterial, "IsSourceConnectionFromBaseMaterial_00")
        .m((bool (*)(const PXR_NS::UsdShadeInput &))
            &PXR_NS::UsdShadeConnectableAPI::IsSourceConnectionFromBaseMaterial, "IsSourceConnectionFromBaseMaterial_01")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &))
            &PXR_NS::UsdShadeConnectableAPI::IsSourceConnectionFromBaseMaterial, "IsSourceConnectionFromBaseMaterial_02")
        .m((bool (*)(const PXR_NS::UsdAttribute &, const PXR_NS::UsdAttribute &))
            &PXR_NS::UsdShadeConnectableAPI::DisconnectSource, "DisconnectSource_00")
        .m((bool (*)(const PXR_NS::UsdShadeInput &, const PXR_NS::UsdAttribute &))
            &PXR_NS::UsdShadeConnectableAPI::DisconnectSource, "DisconnectSource_01")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &, const PXR_NS::UsdAttribute &))
            &PXR_NS::UsdShadeConnectableAPI::DisconnectSource, "DisconnectSource_02")
        .m((bool (*)(const PXR_NS::UsdAttribute &))
            &PXR_NS::UsdShadeConnectableAPI::ClearSources, "ClearSources_00")
        .m((bool (*)(const PXR_NS::UsdShadeInput &))
            &PXR_NS::UsdShadeConnectableAPI::ClearSources, "ClearSources_01")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &))
            &PXR_NS::UsdShadeConnectableAPI::ClearSources, "ClearSources_02")
        .m((bool (*)(const PXR_NS::UsdAttribute &))
            &PXR_NS::UsdShadeConnectableAPI::ClearSource, "ClearSource_00")
        .m((bool (*)(const PXR_NS::UsdShadeInput &))
            &PXR_NS::UsdShadeConnectableAPI::ClearSource, "ClearSource_01")
        .m((bool (*)(const PXR_NS::UsdShadeOutput &))
            &PXR_NS::UsdShadeConnectableAPI::ClearSource, "ClearSource_02")
        .m((bool (*)(const PXR_NS::TfType &))
            &PXR_NS::UsdShadeConnectableAPI::HasConnectableAPI, "HasConnectableAPI_00")
        /** TODO: instantiate this template
        .m((bool (*)())
            &PXR_NS::UsdShadeConnectableAPI::HasConnectableAPI, "HasConnectableAPI_01")
        */
        .m(&PXR_NS::UsdShadeConnectableAPI::CreateOutput)
        .m(&PXR_NS::UsdShadeConnectableAPI::GetOutput)
        .m(&PXR_NS::UsdShadeConnectableAPI::GetOutputs)
        .m(&PXR_NS::UsdShadeConnectableAPI::CreateInput)
        .m(&PXR_NS::UsdShadeConnectableAPI::GetInput)
        .m(&PXR_NS::UsdShadeConnectableAPI::GetInputs)
    ;

    bbl::Class<PXR_NS::UsdShadeConnectionSourceInfo>("ConnectionSourceInfo")
        .ctor(bbl::Class<PXR_NS::UsdShadeConnectionSourceInfo>::Ctor<>(), "default")
        .ctor(bbl::Class<PXR_NS::UsdShadeConnectionSourceInfo>::Ctor<const PXR_NS::UsdShadeConnectableAPI &, const PXR_NS::TfToken &, PXR_NS::UsdShadeAttributeType, PXR_NS::SdfValueTypeName>("source_", "sourceName_", "sourceType_", "typeName_"), "from_schema")
        .ctor(bbl::Class<PXR_NS::UsdShadeConnectionSourceInfo>::Ctor<const PXR_NS::UsdShadeInput &>("input"), "from_connectable")
        .ctor(bbl::Class<PXR_NS::UsdShadeConnectionSourceInfo>::Ctor<const PXR_NS::UsdShadeOutput &>("output"), "ctor_03")
        .ctor(bbl::Class<PXR_NS::UsdShadeConnectionSourceInfo>::Ctor<const PXR_NS::UsdStagePtr &, const PXR_NS::SdfPath &>("stage", "sourcePath"), "ctor_04")
        .m(&PXR_NS::UsdShadeConnectionSourceInfo::IsValid)
        .m(&PXR_NS::UsdShadeConnectionSourceInfo::operator bool, "op_bool")
        .m(&PXR_NS::UsdShadeConnectionSourceInfo::operator==, "op_eq")
        .m(&PXR_NS::UsdShadeConnectionSourceInfo::operator!=, "op_neq")
    ;

    bbl::Class<std::vector<PXR_NS::UsdShadeConnectionSourceInfo>>("ConnectionSourceInfoVector")
        BBL_STD_VECTOR_METHODS(PXR_NS::UsdShadeConnectionSourceInfo)
    ;

    bbl::Class<PXR_NS::UsdShadeConnectableAPIBehavior>("ConnectableAPIBehavior")
        .ctor(bbl::Class<PXR_NS::UsdShadeConnectableAPIBehavior>::Ctor<>(), "default")
        .ctor(bbl::Class<PXR_NS::UsdShadeConnectableAPIBehavior>::Ctor<const bool, const bool>("isContainer", "requiresEncapsulation"), "from_schema")
        .m(&PXR_NS::UsdShadeConnectableAPIBehavior::CanConnectInputToSource)
        .m(&PXR_NS::UsdShadeConnectableAPIBehavior::CanConnectOutputToSource)
        .m(&PXR_NS::UsdShadeConnectableAPIBehavior::IsContainer)
        .m(&PXR_NS::UsdShadeConnectableAPIBehavior::RequiresEncapsulation)
    ;

    /** TODO: instantiate this template
    bbl::fn((void (*)())
            &PXR_NS::UsdShadeRegisterConnectableAPIBehavior, "UsdShadeRegisterConnectableAPIBehavior_01");
    */

    bbl::Enum<PXR_NS::UsdShadeConnectableAPIBehavior::ConnectableNodeTypes>("ConnectableAPIBehaviorConnectableNodeTypes");

    bbl::Class<PXR_NS::UsdShadeCoordSysAPI>("CoordSysAPI")
        .ctor(bbl::Class<PXR_NS::UsdShadeCoordSysAPI>::Ctor<const PXR_NS::UsdPrim &, const PXR_NS::TfToken &>("prim", "name"), "from_prim")
        .ctor(bbl::Class<PXR_NS::UsdShadeCoordSysAPI>::Ctor<const PXR_NS::UsdSchemaBase &, const PXR_NS::TfToken &>("schemaObj", "name"), "from_schema")
        .m((const PXR_NS::TfTokenVector & (*)(bool))
            &PXR_NS::UsdShadeCoordSysAPI::GetSchemaAttributeNames, "GetSchemaAttributeNames_00")
        .m((PXR_NS::TfTokenVector (*)(bool, const PXR_NS::TfToken &))
            &PXR_NS::UsdShadeCoordSysAPI::GetSchemaAttributeNames, "GetSchemaAttributeNames_01")
        .m(&PXR_NS::UsdShadeCoordSysAPI::GetName)
        .m((PXR_NS::UsdShadeCoordSysAPI (*)(const PXR_NS::UsdStagePtr &, const PXR_NS::SdfPath &))
            &PXR_NS::UsdShadeCoordSysAPI::Get, "Get_00")
        .m((PXR_NS::UsdShadeCoordSysAPI (*)(const PXR_NS::UsdPrim &, const PXR_NS::TfToken &))
            &PXR_NS::UsdShadeCoordSysAPI::Get, "Get_01")
        .m(&PXR_NS::UsdShadeCoordSysAPI::GetAll)
        .m(&PXR_NS::UsdShadeCoordSysAPI::IsSchemaPropertyBaseName)
        .m(&PXR_NS::UsdShadeCoordSysAPI::IsCoordSysAPIPath)
        .m(&PXR_NS::UsdShadeCoordSysAPI::CanApply)
        .m(&PXR_NS::UsdShadeCoordSysAPI::Apply)
        .m(&PXR_NS::UsdShadeCoordSysAPI::GetBindingRel)
        .m(&PXR_NS::UsdShadeCoordSysAPI::CreateBindingRel)
        .m(&PXR_NS::UsdShadeCoordSysAPI::HasLocalBindings)
        .m(&PXR_NS::UsdShadeCoordSysAPI::HasLocalBindingsForPrim)
        .m(&PXR_NS::UsdShadeCoordSysAPI::GetLocalBindings)
        .m(&PXR_NS::UsdShadeCoordSysAPI::GetLocalBindingsForPrim)
        .m(&PXR_NS::UsdShadeCoordSysAPI::GetLocalBinding)
        .m(&PXR_NS::UsdShadeCoordSysAPI::FindBindingsWithInheritance)
        .m(&PXR_NS::UsdShadeCoordSysAPI::FindBindingsWithInheritanceForPrim)
        .m(&PXR_NS::UsdShadeCoordSysAPI::FindBindingWithInheritance)
        .m((bool (PXR_NS::UsdShadeCoordSysAPI::*)(const PXR_NS::TfToken &, const PXR_NS::SdfPath &) const)
            &PXR_NS::UsdShadeCoordSysAPI::Bind, "Bind_00")
        .m((bool (PXR_NS::UsdShadeCoordSysAPI::*)(const PXR_NS::SdfPath &) const)
            &PXR_NS::UsdShadeCoordSysAPI::Bind, "Bind_01")
        .m(&PXR_NS::UsdShadeCoordSysAPI::ApplyAndBind)
        .m((bool (PXR_NS::UsdShadeCoordSysAPI::*)(const PXR_NS::TfToken &, bool) const)
            &PXR_NS::UsdShadeCoordSysAPI::ClearBinding, "ClearBinding_00")
        .m((bool (PXR_NS::UsdShadeCoordSysAPI::*)(bool) const)
            &PXR_NS::UsdShadeCoordSysAPI::ClearBinding, "ClearBinding_01")
        .m((bool (PXR_NS::UsdShadeCoordSysAPI::*)(const PXR_NS::TfToken &) const)
            &PXR_NS::UsdShadeCoordSysAPI::BlockBinding, "BlockBinding_00")
        .m((bool (PXR_NS::UsdShadeCoordSysAPI::*)() const)
            &PXR_NS::UsdShadeCoordSysAPI::BlockBinding, "BlockBinding_01")
        .m(&PXR_NS::UsdShadeCoordSysAPI::GetCoordSysRelationshipName)
        .m(&PXR_NS::UsdShadeCoordSysAPI::CanContainPropertyName)
        .m((PXR_NS::TfToken (*)(const PXR_NS::TfToken &))
            &PXR_NS::UsdShadeCoordSysAPI::GetBindingBaseName, "GetBindingBaseName_00")
        .m((PXR_NS::TfToken (PXR_NS::UsdShadeCoordSysAPI::*)() const)
            &PXR_NS::UsdShadeCoordSysAPI::GetBindingBaseName, "GetBindingBaseName_01")
    ;

    bbl::Class<std::vector<PXR_NS::UsdShadeCoordSysAPI>>("CoordSysAPIVector")
        BBL_STD_VECTOR_METHODS(PXR_NS::UsdShadeCoordSysAPI)
    ;

    bbl::Class<PXR_NS::UsdShadeCoordSysAPI::Binding>("CoordSysAPIBinding")
        .ctor(bbl::Class<PXR_NS::UsdShadeCoordSysAPI::Binding>::Ctor<>(), "default")
    ;

    bbl::Class<std::vector<PXR_NS::UsdShadeCoordSysAPI::Binding>>("CoordSysAPIBindingVector")
        BBL_STD_VECTOR_METHODS(PXR_NS::UsdShadeCoordSysAPI::Binding)
    ;


    bbl::Class<PXR_NS::UsdShadeInput>("Input")
        .ctor(bbl::Class<PXR_NS::UsdShadeInput>::Ctor<>(), "default")
        .ctor(bbl::Class<PXR_NS::UsdShadeInput>::Ctor<const PXR_NS::UsdAttribute &>("attr"), "from_schema")
        .m(&PXR_NS::UsdShadeInput::GetFullName)
        .m(&PXR_NS::UsdShadeInput::GetBaseName)
        .m(&PXR_NS::UsdShadeInput::GetTypeName)
        .m(&PXR_NS::UsdShadeInput::GetPrim)
        /** TODO: instantiate this template
        .m((bool (PXR_NS::UsdShadeInput::*)(T *, PXR_NS::UsdTimeCode) const)
            &PXR_NS::UsdShadeInput::Get, "Get_00")
        */
        .m((bool (PXR_NS::UsdShadeInput::*)(PXR_NS::VtValue *, PXR_NS::UsdTimeCode) const)
            &PXR_NS::UsdShadeInput::Get, "Get_01")
        .m((bool (PXR_NS::UsdShadeInput::*)(const PXR_NS::VtValue &, PXR_NS::UsdTimeCode) const)
            &PXR_NS::UsdShadeInput::Set, "Set_00")
        /** TODO: instantiate this template
        .m((bool (PXR_NS::UsdShadeInput::*)(const T &, PXR_NS::UsdTimeCode) const)
            &PXR_NS::UsdShadeInput::Set, "Set_01")
        */
        .m(&PXR_NS::UsdShadeInput::SetRenderType)
        .m(&PXR_NS::UsdShadeInput::GetRenderType)
        .m(&PXR_NS::UsdShadeInput::HasRenderType)
        .m(&PXR_NS::UsdShadeInput::GetSdrMetadata)
        .m(&PXR_NS::UsdShadeInput::GetSdrMetadataByKey)
        .m(&PXR_NS::UsdShadeInput::SetSdrMetadata)
        .m(&PXR_NS::UsdShadeInput::SetSdrMetadataByKey)
        .m(&PXR_NS::UsdShadeInput::HasSdrMetadata)
        .m(&PXR_NS::UsdShadeInput::HasSdrMetadataByKey)
        .m(&PXR_NS::UsdShadeInput::ClearSdrMetadata)
        .m(&PXR_NS::UsdShadeInput::ClearSdrMetadataByKey)
        .m(&PXR_NS::UsdShadeInput::IsInput)
        .m(&PXR_NS::UsdShadeInput::IsInterfaceInputName)
        .m(&PXR_NS::UsdShadeInput::GetAttr)
        // .m(&PXR_NS::UsdShadeInput::operator const PXR_NS::UsdAttribute &, "as_attribute")
        .m(&PXR_NS::UsdShadeInput::IsDefined)
        .m(&PXR_NS::UsdShadeInput::SetDocumentation)
        .m(&PXR_NS::UsdShadeInput::GetDocumentation)
        .m(&PXR_NS::UsdShadeInput::SetDisplayGroup)
        .m(&PXR_NS::UsdShadeInput::GetDisplayGroup)
        .m(&PXR_NS::UsdShadeInput::operator bool, "op_bool")
        .m((bool (PXR_NS::UsdShadeInput::*)(const PXR_NS::UsdAttribute &) const)
            &PXR_NS::UsdShadeInput::CanConnect, "CanConnect_00")
        .m((bool (PXR_NS::UsdShadeInput::*)(const PXR_NS::UsdShadeInput &) const)
            &PXR_NS::UsdShadeInput::CanConnect, "CanConnect_01")
        .m((bool (PXR_NS::UsdShadeInput::*)(const PXR_NS::UsdShadeOutput &) const)
            &PXR_NS::UsdShadeInput::CanConnect, "CanConnect_02")
        .m((bool (PXR_NS::UsdShadeInput::*)(const PXR_NS::UsdShadeConnectionSourceInfo &, const PXR_NS::UsdShadeInput::ConnectionModification) const)
            &PXR_NS::UsdShadeInput::ConnectToSource, "ConnectToSource_00")
        .m((bool (PXR_NS::UsdShadeInput::*)(const PXR_NS::UsdShadeConnectableAPI &, const PXR_NS::TfToken &, const PXR_NS::UsdShadeAttributeType, PXR_NS::SdfValueTypeName) const)
            &PXR_NS::UsdShadeInput::ConnectToSource, "ConnectToSource_01")
        .m((bool (PXR_NS::UsdShadeInput::*)(const PXR_NS::SdfPath &) const)
            &PXR_NS::UsdShadeInput::ConnectToSource, "ConnectToSource_02")
        .m((bool (PXR_NS::UsdShadeInput::*)(const PXR_NS::UsdShadeInput &) const)
            &PXR_NS::UsdShadeInput::ConnectToSource, "ConnectToSource_03")
        .m((bool (PXR_NS::UsdShadeInput::*)(const PXR_NS::UsdShadeOutput &) const)
            &PXR_NS::UsdShadeInput::ConnectToSource, "ConnectToSource_04")
        .m(&PXR_NS::UsdShadeInput::SetConnectedSources)
        .m(&PXR_NS::UsdShadeInput::GetConnectedSources)
        .m(&PXR_NS::UsdShadeInput::GetConnectedSource)
        .m(&PXR_NS::UsdShadeInput::GetRawConnectedSourcePaths)
        .m(&PXR_NS::UsdShadeInput::HasConnectedSource)
        .m(&PXR_NS::UsdShadeInput::IsSourceConnectionFromBaseMaterial)
        .m(&PXR_NS::UsdShadeInput::DisconnectSource)
        .m(&PXR_NS::UsdShadeInput::ClearSources)
        .m(&PXR_NS::UsdShadeInput::ClearSource)
        .m(&PXR_NS::UsdShadeInput::SetConnectability)
        .m(&PXR_NS::UsdShadeInput::GetConnectability)
        .m(&PXR_NS::UsdShadeInput::ClearConnectability)
        .m(&PXR_NS::UsdShadeInput::GetValueProducingAttributes)
        .m(&PXR_NS::UsdShadeInput::GetValueProducingAttribute)
    ;

    bbl::Class<std::vector<PXR_NS::UsdShadeInput>>("InputVector")
        BBL_STD_VECTOR_METHODS(PXR_NS::UsdShadeInput)
    ;


    bbl::Class<PXR_NS::UsdShadeMaterial>("Material")
        .ctor(bbl::Class<PXR_NS::UsdShadeMaterial>::Ctor<const PXR_NS::UsdPrim &>("prim"), "from_prim")
        .ctor(bbl::Class<PXR_NS::UsdShadeMaterial>::Ctor<const PXR_NS::UsdSchemaBase &>("schemaObj"), "from_schema")
        .m(&PXR_NS::UsdShadeMaterial::GetSchemaAttributeNames)
        .m(&PXR_NS::UsdShadeMaterial::Get)
        .m(&PXR_NS::UsdShadeMaterial::Define)
        .m(&PXR_NS::UsdShadeMaterial::GetSurfaceAttr)
        .m(&PXR_NS::UsdShadeMaterial::CreateSurfaceAttr)
        .m(&PXR_NS::UsdShadeMaterial::GetDisplacementAttr)
        .m(&PXR_NS::UsdShadeMaterial::CreateDisplacementAttr)
        .m(&PXR_NS::UsdShadeMaterial::GetVolumeAttr)
        .m(&PXR_NS::UsdShadeMaterial::CreateVolumeAttr)
        .m(&PXR_NS::UsdShadeMaterial::CreateSurfaceOutput)
        .m(&PXR_NS::UsdShadeMaterial::GetSurfaceOutput)
        .m(&PXR_NS::UsdShadeMaterial::GetSurfaceOutputs)
        .m((PXR_NS::UsdShadeShader (PXR_NS::UsdShadeMaterial::*)(const PXR_NS::TfToken &, PXR_NS::TfToken *, PXR_NS::UsdShadeAttributeType *) const)
            &PXR_NS::UsdShadeMaterial::ComputeSurfaceSource, "ComputeSurfaceSource_00")
        .m((PXR_NS::UsdShadeShader (PXR_NS::UsdShadeMaterial::*)(const PXR_NS::TfTokenVector &, PXR_NS::TfToken *, PXR_NS::UsdShadeAttributeType *) const)
            &PXR_NS::UsdShadeMaterial::ComputeSurfaceSource, "ComputeSurfaceSource_01")
        .m(&PXR_NS::UsdShadeMaterial::CreateDisplacementOutput)
        .m(&PXR_NS::UsdShadeMaterial::GetDisplacementOutput)
        .m(&PXR_NS::UsdShadeMaterial::GetDisplacementOutputs)
        .m((PXR_NS::UsdShadeShader (PXR_NS::UsdShadeMaterial::*)(const PXR_NS::TfToken &, PXR_NS::TfToken *, PXR_NS::UsdShadeAttributeType *) const)
            &PXR_NS::UsdShadeMaterial::ComputeDisplacementSource, "ComputeDisplacementSource_00")
        .m((PXR_NS::UsdShadeShader (PXR_NS::UsdShadeMaterial::*)(const PXR_NS::TfTokenVector &, PXR_NS::TfToken *, PXR_NS::UsdShadeAttributeType *) const)
            &PXR_NS::UsdShadeMaterial::ComputeDisplacementSource, "ComputeDisplacementSource_01")
        .m(&PXR_NS::UsdShadeMaterial::CreateVolumeOutput)
        .m(&PXR_NS::UsdShadeMaterial::GetVolumeOutput)
        .m(&PXR_NS::UsdShadeMaterial::GetVolumeOutputs)
        .m((PXR_NS::UsdShadeShader (PXR_NS::UsdShadeMaterial::*)(const PXR_NS::TfToken &, PXR_NS::TfToken *, PXR_NS::UsdShadeAttributeType *) const)
            &PXR_NS::UsdShadeMaterial::ComputeVolumeSource, "ComputeVolumeSource_00")
        .m((PXR_NS::UsdShadeShader (PXR_NS::UsdShadeMaterial::*)(const PXR_NS::TfTokenVector &, PXR_NS::TfToken *, PXR_NS::UsdShadeAttributeType *) const)
            &PXR_NS::UsdShadeMaterial::ComputeVolumeSource, "ComputeVolumeSource_01")
        .m(&PXR_NS::UsdShadeMaterial::GetEditContextForVariant)
        .m(&PXR_NS::UsdShadeMaterial::GetMaterialVariant)
        .m(&PXR_NS::UsdShadeMaterial::CreateMasterMaterialVariant)
        .m(&PXR_NS::UsdShadeMaterial::GetBaseMaterial)
        .m(&PXR_NS::UsdShadeMaterial::GetBaseMaterialPath)
        .m(&PXR_NS::UsdShadeMaterial::FindBaseMaterialPathInPrimIndex)
        .m(&PXR_NS::UsdShadeMaterial::SetBaseMaterial)
        .m(&PXR_NS::UsdShadeMaterial::SetBaseMaterialPath)
        .m(&PXR_NS::UsdShadeMaterial::ClearBaseMaterial)
        .m(&PXR_NS::UsdShadeMaterial::HasBaseMaterial)
    ;

    bbl::Class<std::vector<PXR_NS::UsdShadeMaterial>>("MaterialVector")
        BBL_STD_VECTOR_METHODS(PXR_NS::UsdShadeMaterial)
    ;

    bbl::Class<PXR_NS::UsdShadeMaterialBindingAPI>("MaterialBindingAPI")
        .ctor(bbl::Class<PXR_NS::UsdShadeMaterialBindingAPI>::Ctor<const PXR_NS::UsdPrim &>("prim"), "from_prim")
        .ctor(bbl::Class<PXR_NS::UsdShadeMaterialBindingAPI>::Ctor<const PXR_NS::UsdSchemaBase &>("schemaObj"), "from_schema")
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::GetSchemaAttributeNames)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::Get)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::CanApply)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::Apply)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::GetDirectBindingRel)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::GetCollectionBindingRel)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::GetCollectionBindingRels)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::GetDirectBinding)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::GetCollectionBindings)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::GetMaterialBindingStrength)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::SetMaterialBindingStrength)
        .m((bool (PXR_NS::UsdShadeMaterialBindingAPI::*)(const PXR_NS::UsdShadeMaterial &, const PXR_NS::TfToken &, const PXR_NS::TfToken &) const)
            &PXR_NS::UsdShadeMaterialBindingAPI::Bind, "Bind_00")
        .m((bool (PXR_NS::UsdShadeMaterialBindingAPI::*)(const PXR_NS::UsdCollectionAPI &, const PXR_NS::UsdShadeMaterial &, const PXR_NS::TfToken &, const PXR_NS::TfToken &, const PXR_NS::TfToken &) const)
            &PXR_NS::UsdShadeMaterialBindingAPI::Bind, "Bind_01")
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::UnbindDirectBinding)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::UnbindCollectionBinding)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::UnbindAllBindings)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::RemovePrimFromBindingCollection)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::AddPrimToBindingCollection)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::GetMaterialPurposes)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::GetResolvedTargetPathFromBindingRel)
        // .m((PXR_NS::UsdShadeMaterial (PXR_NS::UsdShadeMaterialBindingAPI::*)(BindingsCache *, CollectionQueryCache *, const PXR_NS::TfToken &, PXR_NS::UsdRelationship *, bool) const)
        //     &PXR_NS::UsdShadeMaterialBindingAPI::ComputeBoundMaterial, "ComputeBoundMaterial_00")
        .m((PXR_NS::UsdShadeMaterial (PXR_NS::UsdShadeMaterialBindingAPI::*)(const PXR_NS::TfToken &, PXR_NS::UsdRelationship *, bool) const)
            &PXR_NS::UsdShadeMaterialBindingAPI::ComputeBoundMaterial, "ComputeBoundMaterial")
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::ComputeBoundMaterials)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::CreateMaterialBindSubset)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::GetMaterialBindSubsets)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::SetMaterialBindSubsetsFamilyType)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::GetMaterialBindSubsetsFamilyType)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::CanContainPropertyName)
    ;

    bbl::Class<PXR_NS::UsdShadeMaterialBindingAPI::DirectBinding>("MaterialBindingAPIDirectBinding")
        .ctor(bbl::Class<PXR_NS::UsdShadeMaterialBindingAPI::DirectBinding>::Ctor<>(), "default")
        .ctor(bbl::Class<PXR_NS::UsdShadeMaterialBindingAPI::DirectBinding>::Ctor<const PXR_NS::UsdRelationship &>("bindingRel"), "from_schema")
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::DirectBinding::GetMaterial)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::DirectBinding::GetMaterialPath)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::DirectBinding::GetBindingRel)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::DirectBinding::GetMaterialPurpose)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::DirectBinding::IsBound)
    ;

    bbl::Class<PXR_NS::UsdShadeMaterialBindingAPI::CollectionBinding>("MaterialBindingAPICollectionBinding")
        .ctor(bbl::Class<PXR_NS::UsdShadeMaterialBindingAPI::CollectionBinding>::Ctor<>(), "default")
        .ctor(bbl::Class<PXR_NS::UsdShadeMaterialBindingAPI::CollectionBinding>::Ctor<const PXR_NS::UsdRelationship &>("collBindingRel"), "from_schema")
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::CollectionBinding::GetMaterial)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::CollectionBinding::GetCollection)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::CollectionBinding::IsCollectionBindingRel)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::CollectionBinding::IsValid)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::CollectionBinding::GetCollectionPath)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::CollectionBinding::GetMaterialPath)
        .m(&PXR_NS::UsdShadeMaterialBindingAPI::CollectionBinding::GetBindingRel)
    ;

    bbl::Class<PXR_NS::UsdShadeMaterialBindingAPI::CollectionBindingVector>("MaterialBindingAPICollectionBindinVector")
        BBL_STD_VECTOR_METHODS(PXR_NS::UsdShadeMaterialBindingAPI::CollectionBinding)
    ;

    bbl::Class<PXR_NS::UsdShadeMaterialBindingAPI::BindingsAtPrim>("MaterialBindingAPIBindingsAtPrim")
        .ctor(bbl::Class<PXR_NS::UsdShadeMaterialBindingAPI::BindingsAtPrim>::Ctor<const PXR_NS::UsdPrim &, const PXR_NS::TfToken &, bool>("prim", "materialPurpose", "supportLegacyBindings"), "from_prim")
    ;

    bbl::Class<PXR_NS::UsdShadeNodeDefAPI>("NodeDefAPI")
        .ctor(bbl::Class<PXR_NS::UsdShadeNodeDefAPI>::Ctor<const PXR_NS::UsdPrim &>("prim"), "from_prim")
        .ctor(bbl::Class<PXR_NS::UsdShadeNodeDefAPI>::Ctor<const PXR_NS::UsdSchemaBase &>("schemaObj"), "from_schema")
        .m(&PXR_NS::UsdShadeNodeDefAPI::GetSchemaAttributeNames)
        .m(&PXR_NS::UsdShadeNodeDefAPI::Get)
        .m(&PXR_NS::UsdShadeNodeDefAPI::CanApply)
        .m(&PXR_NS::UsdShadeNodeDefAPI::Apply)
        .m(&PXR_NS::UsdShadeNodeDefAPI::GetImplementationSourceAttr)
        .m(&PXR_NS::UsdShadeNodeDefAPI::CreateImplementationSourceAttr)
        .m(&PXR_NS::UsdShadeNodeDefAPI::GetIdAttr)
        .m(&PXR_NS::UsdShadeNodeDefAPI::CreateIdAttr)
        .m(&PXR_NS::UsdShadeNodeDefAPI::GetImplementationSource)
        .m(&PXR_NS::UsdShadeNodeDefAPI::SetShaderId)
        .m(&PXR_NS::UsdShadeNodeDefAPI::GetShaderId)
        .m(&PXR_NS::UsdShadeNodeDefAPI::SetSourceAsset)
        .m(&PXR_NS::UsdShadeNodeDefAPI::GetSourceAsset)
        .m(&PXR_NS::UsdShadeNodeDefAPI::SetSourceAssetSubIdentifier)
        .m(&PXR_NS::UsdShadeNodeDefAPI::GetSourceAssetSubIdentifier)
        .m(&PXR_NS::UsdShadeNodeDefAPI::SetSourceCode)
        .m(&PXR_NS::UsdShadeNodeDefAPI::GetSourceCode)
        .m(&PXR_NS::UsdShadeNodeDefAPI::GetShaderNodeForSourceType)
    ;

    bbl::Class<PXR_NS::UsdShadeNodeGraph>("NodeGraph")
        .ctor(bbl::Class<PXR_NS::UsdShadeNodeGraph>::Ctor<const PXR_NS::UsdPrim &>("prim"), "from_prim")
        .ctor(bbl::Class<PXR_NS::UsdShadeNodeGraph>::Ctor<const PXR_NS::UsdSchemaBase &>("schemaObj"), "from_schema")
        .ctor(bbl::Class<PXR_NS::UsdShadeNodeGraph>::Ctor<const PXR_NS::UsdShadeConnectableAPI &>("connectable"), "from_connectable")
        .m(&PXR_NS::UsdShadeNodeGraph::GetSchemaAttributeNames)
        .m(&PXR_NS::UsdShadeNodeGraph::Get)
        .m(&PXR_NS::UsdShadeNodeGraph::Define)
        .m(&PXR_NS::UsdShadeNodeGraph::ConnectableAPI)
        .m(&PXR_NS::UsdShadeNodeGraph::CreateOutput)
        .m(&PXR_NS::UsdShadeNodeGraph::GetOutput)
        .m(&PXR_NS::UsdShadeNodeGraph::GetOutputs)
        .m(&PXR_NS::UsdShadeNodeGraph::ComputeOutputSource)
        .m(&PXR_NS::UsdShadeNodeGraph::CreateInput)
        .m(&PXR_NS::UsdShadeNodeGraph::GetInput)
        .m(&PXR_NS::UsdShadeNodeGraph::GetInputs)
        .m(&PXR_NS::UsdShadeNodeGraph::GetInterfaceInputs)
        .m(&PXR_NS::UsdShadeNodeGraph::ComputeInterfaceInputConsumersMap)
    ;

    bbl::Class<PXR_NS::UsdShadeNodeGraph::InterfaceInputConsumersMap>("NodeGraphInterfaceInputConsumersMap")
    ;

    bbl::Class<PXR_NS::UsdShadeOutput>("Output")
        .ctor(bbl::Class<PXR_NS::UsdShadeOutput>::Ctor<>(), "default")
        .ctor(bbl::Class<PXR_NS::UsdShadeOutput>::Ctor<const PXR_NS::UsdAttribute &>("attr"), "from_schema")
        .m(&PXR_NS::UsdShadeOutput::GetFullName)
        .m(&PXR_NS::UsdShadeOutput::GetBaseName)
        .m(&PXR_NS::UsdShadeOutput::GetPrim)
        .m(&PXR_NS::UsdShadeOutput::GetTypeName)
        .m((bool (PXR_NS::UsdShadeOutput::*)(const PXR_NS::VtValue &, PXR_NS::UsdTimeCode) const)
            &PXR_NS::UsdShadeOutput::Set, "Set")
        /** TODO: instantiate this template
        .m((bool (PXR_NS::UsdShadeOutput::*)(const T &, PXR_NS::UsdTimeCode) const)
            &PXR_NS::UsdShadeOutput::Set, "Set_01")
        */
        .m(&PXR_NS::UsdShadeOutput::SetRenderType)
        .m(&PXR_NS::UsdShadeOutput::GetRenderType)
        .m(&PXR_NS::UsdShadeOutput::HasRenderType)
        .m(&PXR_NS::UsdShadeOutput::GetSdrMetadata)
        .m(&PXR_NS::UsdShadeOutput::GetSdrMetadataByKey)
        .m(&PXR_NS::UsdShadeOutput::SetSdrMetadata)
        .m(&PXR_NS::UsdShadeOutput::SetSdrMetadataByKey)
        .m(&PXR_NS::UsdShadeOutput::HasSdrMetadata)
        .m(&PXR_NS::UsdShadeOutput::HasSdrMetadataByKey)
        .m(&PXR_NS::UsdShadeOutput::ClearSdrMetadata)
        .m(&PXR_NS::UsdShadeOutput::ClearSdrMetadataByKey)
        .m(&PXR_NS::UsdShadeOutput::IsOutput)
        .m(&PXR_NS::UsdShadeOutput::GetAttr)
        // .m(&PXR_NS::UsdShadeOutput::operator PXR_NS::UsdAttribute, "as_attribute")
        .m(&PXR_NS::UsdShadeOutput::IsDefined)
        .m((bool (PXR_NS::UsdShadeOutput::*)(const PXR_NS::UsdAttribute &) const)
            &PXR_NS::UsdShadeOutput::CanConnect, "CanConnect_00")
        .m((bool (PXR_NS::UsdShadeOutput::*)(const PXR_NS::UsdShadeInput &) const)
            &PXR_NS::UsdShadeOutput::CanConnect, "CanConnect_01")
        .m((bool (PXR_NS::UsdShadeOutput::*)(const PXR_NS::UsdShadeOutput &) const)
            &PXR_NS::UsdShadeOutput::CanConnect, "CanConnect_02")
        .m((bool (PXR_NS::UsdShadeOutput::*)(const PXR_NS::UsdShadeConnectionSourceInfo &, const PXR_NS::UsdShadeOutput::ConnectionModification) const)
            &PXR_NS::UsdShadeOutput::ConnectToSource, "ConnectToSource_00")
        .m((bool (PXR_NS::UsdShadeOutput::*)(const PXR_NS::UsdShadeConnectableAPI &, const PXR_NS::TfToken &, const PXR_NS::UsdShadeAttributeType, PXR_NS::SdfValueTypeName) const)
            &PXR_NS::UsdShadeOutput::ConnectToSource, "ConnectToSource_01")
        .m((bool (PXR_NS::UsdShadeOutput::*)(const PXR_NS::SdfPath &) const)
            &PXR_NS::UsdShadeOutput::ConnectToSource, "ConnectToSource_02")
        .m((bool (PXR_NS::UsdShadeOutput::*)(const PXR_NS::UsdShadeInput &) const)
            &PXR_NS::UsdShadeOutput::ConnectToSource, "ConnectToSource_03")
        .m((bool (PXR_NS::UsdShadeOutput::*)(const PXR_NS::UsdShadeOutput &) const)
            &PXR_NS::UsdShadeOutput::ConnectToSource, "ConnectToSource_04")
        .m(&PXR_NS::UsdShadeOutput::SetConnectedSources)
        .m(&PXR_NS::UsdShadeOutput::GetConnectedSources)
        .m(&PXR_NS::UsdShadeOutput::GetConnectedSource)
        .m(&PXR_NS::UsdShadeOutput::GetRawConnectedSourcePaths)
        .m(&PXR_NS::UsdShadeOutput::HasConnectedSource)
        .m(&PXR_NS::UsdShadeOutput::IsSourceConnectionFromBaseMaterial)
        .m(&PXR_NS::UsdShadeOutput::DisconnectSource)
        .m(&PXR_NS::UsdShadeOutput::ClearSources)
        .m(&PXR_NS::UsdShadeOutput::ClearSource)
        .m(&PXR_NS::UsdShadeOutput::GetValueProducingAttributes)
        .m(&PXR_NS::UsdShadeOutput::operator bool, "op_bool")
    ;

    bbl::Class<std::vector<PXR_NS::UsdShadeOutput>>("OutputVector")
        BBL_STD_VECTOR_METHODS(PXR_NS::UsdShadeOutput)
    ;

    bbl::Class<PXR_NS::UsdShadeOutput::SourceInfoVector>("InputSourceInfoVector")
    ;

    bbl::Class<PXR_NS::UsdShadeShader>("Shader")
        .ctor(bbl::Class<PXR_NS::UsdShadeShader>::Ctor<const PXR_NS::UsdPrim &>("prim"), "from_prim")
        .ctor(bbl::Class<PXR_NS::UsdShadeShader>::Ctor<const PXR_NS::UsdSchemaBase &>("schemaObj"), "from_schema")
        .ctor(bbl::Class<PXR_NS::UsdShadeShader>::Ctor<const PXR_NS::UsdShadeConnectableAPI &>("connectable"), "from_connectable")
        .m(&PXR_NS::UsdShadeShader::GetSchemaAttributeNames)
        .m(&PXR_NS::UsdShadeShader::Get)
        .m(&PXR_NS::UsdShadeShader::Define)
        .m(&PXR_NS::UsdShadeShader::ConnectableAPI)
        .m(&PXR_NS::UsdShadeShader::CreateOutput)
        .m(&PXR_NS::UsdShadeShader::GetOutput)
        .m(&PXR_NS::UsdShadeShader::GetOutputs)
        .m(&PXR_NS::UsdShadeShader::CreateInput)
        .m(&PXR_NS::UsdShadeShader::GetInput)
        .m(&PXR_NS::UsdShadeShader::GetInputs)
        .m(&PXR_NS::UsdShadeShader::GetImplementationSourceAttr)
        .m(&PXR_NS::UsdShadeShader::CreateImplementationSourceAttr)
        .m(&PXR_NS::UsdShadeShader::GetIdAttr)
        .m(&PXR_NS::UsdShadeShader::CreateIdAttr)
        .m(&PXR_NS::UsdShadeShader::GetImplementationSource)
        .m(&PXR_NS::UsdShadeShader::SetShaderId)
        .m(&PXR_NS::UsdShadeShader::GetShaderId)
        .m(&PXR_NS::UsdShadeShader::SetSourceAsset)
        .m(&PXR_NS::UsdShadeShader::GetSourceAsset)
        .m(&PXR_NS::UsdShadeShader::SetSourceAssetSubIdentifier)
        .m(&PXR_NS::UsdShadeShader::GetSourceAssetSubIdentifier)
        .m(&PXR_NS::UsdShadeShader::SetSourceCode)
        .m(&PXR_NS::UsdShadeShader::GetSourceCode)
        .m(&PXR_NS::UsdShadeShader::GetShaderNodeForSourceType)
        .m(&PXR_NS::UsdShadeShader::GetSdrMetadata)
        .m(&PXR_NS::UsdShadeShader::GetSdrMetadataByKey)
        .m(&PXR_NS::UsdShadeShader::SetSdrMetadata)
        .m(&PXR_NS::UsdShadeShader::SetSdrMetadataByKey)
        .m(&PXR_NS::UsdShadeShader::HasSdrMetadata)
        .m(&PXR_NS::UsdShadeShader::HasSdrMetadataByKey)
        .m(&PXR_NS::UsdShadeShader::ClearSdrMetadata)
        .m(&PXR_NS::UsdShadeShader::ClearSdrMetadataByKey)
    ;

    bbl::Class<PXR_NS::UsdShadeShaderDefParserPlugin>("ShaderDefParserPlugin")
        .ctor(bbl::Class<PXR_NS::UsdShadeShaderDefParserPlugin>::Ctor<>(), "default")
        .m(&PXR_NS::UsdShadeShaderDefParserPlugin::Parse)
        .m(&PXR_NS::UsdShadeShaderDefParserPlugin::GetDiscoveryTypes)
        .m(&PXR_NS::UsdShadeShaderDefParserPlugin::GetSourceType)
    ;

    bbl::Class<PXR_NS::UsdShadeShaderDefUtils>("ShaderDefUtils")
        .m(&PXR_NS::UsdShadeShaderDefUtils::GetNodeDiscoveryResults)
        .m(&PXR_NS::UsdShadeShaderDefUtils::GetShaderProperties)
        .m(&PXR_NS::UsdShadeShaderDefUtils::GetPrimvarNamesMetadataString)
    ;

    bbl::Class<PXR_NS::UsdShadeTokensType>("TokensType")
    ;

    bbl::Enum<PXR_NS::UsdShadeAttributeType>("AttributeType");

    bbl::Enum<PXR_NS::UsdShadeConnectionModification>("ConnectionModification");

    bbl::Class<PXR_NS::UsdShadeUdimUtils>("UdimUtils")
        .m(&PXR_NS::UsdShadeUdimUtils::IsUdimIdentifier)
        .m(&PXR_NS::UsdShadeUdimUtils::ReplaceUdimPattern)
        .m(&PXR_NS::UsdShadeUdimUtils::ResolveUdimPath)
        .m(&PXR_NS::UsdShadeUdimUtils::ResolveUdimTilePaths)
    ;

    bbl::Class<PXR_NS::UsdShadeUtils>("Utils")
        .m(&PXR_NS::UsdShadeUtils::GetPrefixForAttributeType)
        .m(&PXR_NS::UsdShadeUtils::GetConnectedSourcePath)
        .m(&PXR_NS::UsdShadeUtils::GetBaseNameAndType)
        .m(&PXR_NS::UsdShadeUtils::GetType)
        .m(&PXR_NS::UsdShadeUtils::GetFullName)
        .m((PXR_NS::UsdShadeAttributeVector (*)(const PXR_NS::UsdShadeInput &, bool))
            &PXR_NS::UsdShadeUtils::GetValueProducingAttributes, "GetValueProducingAttributes_00")
        .m((PXR_NS::UsdShadeAttributeVector (*)(const PXR_NS::UsdShadeOutput &, bool))
            &PXR_NS::UsdShadeUtils::GetValueProducingAttributes, "GetValueProducingAttributes_01")
    ;

    bbl::Class<std::pair<PXR_NS::TfToken, PXR_NS::UsdShadeAttributeType>>("TokenAttributeTypePair")
    ;



}


#endif
