#pragma once

#include "babble"

// Bind std::vector<TY>
#define VTARRAY_METHODS(TY)                                                                                             \
    .ctor(bbl::Class<PXR_NS::VtArray<bbl::detail::argument_type<void(TY)>::type>>::Ctor<>(), "new")                              \
    .ctor(bbl::Class<PXR_NS::VtArray<bbl::detail::argument_type<void(TY)>::type>>::Ctor<bbl::detail::argument_type<void(TY)>::type const*, bbl::detail::argument_type<void(TY)>::type const*>("start", "end"), "from_range")                              \
    .m((bbl::detail::argument_type<void(TY)>::type* (PXR_NS::VtArray<bbl::detail::argument_type<void(TY)>::type>::*)()) \
        &PXR_NS::VtArray<bbl::detail::argument_type<void(TY)>::type>::data)                                             \
    .m((bbl::detail::argument_type<void(TY)>::type const* (PXR_NS::VtArray<bbl::detail::argument_type<void(TY)>::type>::*)() const) \
        &PXR_NS::VtArray<bbl::detail::argument_type<void(TY)>::type>::data, "data_const")                               \
    .m(&PXR_NS::VtArray<bbl::detail::argument_type<void(TY)>::type>::size)                                              \
    .m((bbl::detail::argument_type<void(TY)>::type& (PXR_NS::VtArray<bbl::detail::argument_type<void(TY)>::type>::*)(size_t)) \
        &PXR_NS::VtArray<bbl::detail::argument_type<void(TY)>::type>::operator[], "op_index")                           \
    .m((bbl::detail::argument_type<void(TY)>::type const& (PXR_NS::VtArray<bbl::detail::argument_type<void(TY)>::type>::*)(size_t) const) \
        &PXR_NS::VtArray<bbl::detail::argument_type<void(TY)>::type>::operator[], "op_index_const")                     \
    .ignore_all_unbound()


#define TF_SMALLVECTOR_METHODS(TY) \
    .m(&bbl::detail::argument_type<void(TY)>::type::empty) \
    .m(&bbl::detail::argument_type<void(TY)>::type::size) \
    .m((bbl::detail::argument_type<void(TY)>::type::reference (bbl::detail::argument_type<void(TY)>::type::*)(bbl::detail::argument_type<void(TY)>::type::size_type i)) \
        &bbl::detail::argument_type<void(TY)>::type::operator[]) \
    .m((bbl::detail::argument_type<void(TY)>::type::const_reference (bbl::detail::argument_type<void(TY)>::type::*)(bbl::detail::argument_type<void(TY)>::type::size_type i) const) \
        &bbl::detail::argument_type<void(TY)>::type::operator[], "op_index_const") \
    .ignore_all_unbound()